* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --toolbar-height: 15vh;
    --toolbar-padding: 1vh;
    --toolbar-space: calc(var(--toolbar-height) - var(--toolbar-padding) * 2)
}

.CORRIDOR {
    background-color: #A9A9A9;
}

.CURRENT_PATH {
    background-color: #7FFF00;
}

.WALL,
.blank,
.tile-legend {
    background-color: rgb(70, 70, 70);
}


.OBSTRUCTION {
    background-color: rgb(50, 50, 50);
}

.DEBUG {
    background-color: red;
}

.BREADCRUMB {
    background-color: #006400;
}

.UNREACHABLE {
    background-color: rgb(0, 0, 0);
}

.CUTOFF {
    background-color: rgb(0, 255, 255);
}

.EXCLUDED {
    background-color: #800000;
}

.INTERSECTION {
    background-color: #DB7093;
}

.ROOM {
    background-color: #BDB76B;
}

.ROOM_LOCKED {
    background-color: #55522d;
}

.DOOR_CLOSED {
    background-color: sandybrown;
    /* transition: 2s; */
}

.DOOR_OPENED {
    background-color:#a09b59;
    transition: 2s;
}

.DOOR_LOCKED {
    background-color: maroon;
    /* transition: 2s; */
}

.tile {
    color: rgba(0, 0, 0, 0);
    font-size: 10px;
    border: 0vmin solid rgb(0, 0, 0);
}

.tile:hover {
    border: rgb(0, 0, 0) solid ;
    border-width: 0.15vmin;
    color: rgba(0, 0, 0, 1);
}

#container-grid {
    display: grid;
    grid-template-columns: 1fr 29fr;
    grid-template-rows: 1fr 29fr;
    grid-column-gap: 0;
    grid-row-gap: 0;
    margin: 2.5vh auto;
}

.stage-grid {
    display: grid;
    grid-template-columns: repeat(30, 1fr);
    grid-template-rows: repeat(30, 1fr);
    grid-column-gap: 0;
    grid-row-gap: 0;
    height: 100%;
    width: 100%;
}

#coord-top {
    display: grid;
    grid-template-columns: repeat(30, 1fr);
    grid-template-rows: 1fr;
    grid-column-gap: 0px;
    grid-row-gap: 0px;
    height: 100%;
    width: 100%;
}

#coord-side {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(30, 1fr);
    grid-column-gap: 0px;
    grid-row-gap: 0px;
    height: 100%;
    width: 100%;
}

.tile-legend {
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 1vh;
    color: rgb(100, 100, 100);
}

#selection {
    border: 2px solid rgb(5, 145, 17);
    background-color: rgba(0, 100, 0, 0.5);
    transition: 0.25s;
}

#selection:hover {
    border: 2px rgb(255, 255, 255) solid;
    transform: scale(1.1);
    box-shadow: 0 0 5px 0px #000;
}

#party {
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid skyblue;
    background-color: steelblue;
    transition: 0.25s;
    /* pointer-events: none;  */
}

#party:hover {
    border: 2px rgb(255, 255, 255) solid;
    box-shadow: 0 0 5px 0px #000;
    transform: scale(1.2); 
}

@keyframes blink-border {
    10% { 
        border-color: rgb(255, 255, 255);
        transform: scale(1.2);
    }
}

.selected {
    box-shadow: 0 0 5px 0px #000;
    animation-name: blink-border;
    animation-duration: 1s;
    transition: 1s;
    animation-iteration-count: infinite;
}

@keyframes left {
    100% {
        transform: rotate(180deg);
    }
}

@keyframes right {
    100% {
        transform: rotate(0deg);
    }
}

@keyframes up {
    100% {
        transform: rotate(270deg);
    }
}

@keyframes down {
    100% {
        transform: rotate(90deg);
    }
}

/*potrzebne są dwie niestandardowe animacje (poniżej), ponieważ bez nich, czainowana animacja obrotu z prawa w górę
(oraz z góry w prawo) powodowała obrót "gracza" o 270 stopni zamiast 90 stopni*/
@keyframes right-to-up {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(-90deg);
    }
}

@keyframes up-to-right {
    0% {
        transform: rotate(-90deg);
    }
    100% {
        transform: rotate(0deg);
    }
}

#party-img {
    transition: 0.5s;
    animation-fill-mode: forwards, forwards;    /*dwie kolejne animacje chainowane w jedną (chainowanie odbywa się w JSie*/
    animation-duration: 0s, 0.15s;
    animation-delay: 0s, 0s;
}